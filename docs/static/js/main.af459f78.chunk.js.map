{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","loadImages","useFetchGifs","GifExpertApp","c","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAc5C,OACI,sBAAMC,SARW,SAAAC,GACjBA,EAAEC,iBAC8B,IAA7BJ,EAAWK,OAAOC,SACrBR,GAAc,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC7CN,EAAc,MAId,SACI,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAbpB,SAAAP,GACtBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEb,IAAMO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAChC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDxB,SAAsBA,GAAW,IAAD,EACjBd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH8B,mBACpCC,EADoC,KAC7BC,EAD6B,KAiB3C,OAXAC,qBAAU,WAAM,4CACZ,4BAAAtB,EAAA,sEACyBF,EAAQC,GADjC,OACUa,EADV,OAEIS,EAAS,CACLf,KAAMM,EACNO,SAAS,IAJjB,4CADY,uBAAC,WAAD,wBAQZI,KACD,CAACxB,IAEGqB,EDf2BI,CAAazB,GAAjCa,EADqB,EAC3BN,KAAca,EADa,EACbA,QAEtB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IACnD,6BAAKoB,GAAW,aAChB,qBAAKJ,UAAU,6CAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aER/Ce,EAAe,WAAO,IAAD,EACMxC,mBAAS,CAAC,cADhB,mBACvBQ,EADuB,KACXT,EADW,KAG9B,OACI,qCACI,8CACA,uBAEA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,6BAEIS,EAAWe,KAAI,SAAAkB,GAAC,OAAI,cAAC,EAAD,CAAS3B,SAAU2B,GAAQA,Y,MCZ/DC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.af459f78.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = e => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length === 0) return;\r\n        setCategories(categories => [ inputValue, ...categories]);\r\n        setInputValue('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={inputValue} onChange={handleInputChange}/>\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n};","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=SVfPrYvanu5xBndumqEXVdbuIkoVx2La`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return { \r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            <h3>{loading && 'Cargando'}</h3>\r\n            <div className=\"card-grid animate__animated animate__flash\">\r\n                {\r\n                    images.map(img => <GifGridItem key={img.id} {...img} />)\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport default function useFetchGifs(category) {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        async function loadImages(){\r\n            const images = await getGifs(category);\r\n            setState({\r\n                data: images,\r\n                loading: false,\r\n            });\r\n        }\r\n        loadImages();\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n// rafc\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['One piece']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr/>\r\n\r\n            <AddCategory setCategories={setCategories} />\r\n\r\n            <ol>\r\n            {\r\n                categories.map(c => <GifGrid category={c} key={c} />)\r\n            }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}